/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DATA_COLLECTORVIEWBASE_HPP
#define DATA_COLLECTORVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/data_collector_screen/Data_CollectorPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <gui/containers/CompanyInfo.hpp>
#include <touchgfx/containers/ListLayout.hpp>
#include <gui/containers/TableHead.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>

class Data_CollectorViewBase : public touchgfx::View<Data_CollectorPresenter>
{
public:
    Data_CollectorViewBase();
    virtual ~Data_CollectorViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage BackGround;
    CompanyInfo TopBar;
    touchgfx::ListLayout DataList;
    TableHead tableHead1;
    touchgfx::Button button1;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Data_CollectorViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 15360;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // DATA_COLLECTORVIEWBASE_HPP
