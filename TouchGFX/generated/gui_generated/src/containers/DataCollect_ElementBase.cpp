/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/DataCollect_ElementBase.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

DataCollect_ElementBase::DataCollect_ElementBase()
{
    setWidth(924);
    setHeight(48);
    BG_Image.setXY(0, 0);
    BG_Image.setBitmap(touchgfx::Bitmap(BITMAP_LIST_ELEMENT_BACKGROUND_ID));

    DataRecord_Order.setXY(53, 10);
    DataRecord_Order.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    DataRecord_Order.setLinespacing(0);
    Unicode::snprintf(DataRecord_OrderBuffer, DATARECORD_ORDER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OCKD).getText());
    DataRecord_Order.setWildcard(DataRecord_OrderBuffer);
    DataRecord_Order.resizeToCurrentText();
    DataRecord_Order.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TDN6));

    Longtitude_Seconds.setXY(850, 13);
    Longtitude_Seconds.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Longtitude_Seconds.setLinespacing(0);
    touchgfx::Unicode::snprintf(Longtitude_SecondsBuffer1, LONGTITUDE_SECONDSBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W26X).getText());
    Longtitude_Seconds.setWildcard1(Longtitude_SecondsBuffer1);
    touchgfx::Unicode::snprintf(Longtitude_SecondsBuffer2, LONGTITUDE_SECONDSBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E32G).getText());
    Longtitude_Seconds.setWildcard2(Longtitude_SecondsBuffer2);
    Longtitude_Seconds.resizeToCurrentText();
    Longtitude_Seconds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EOM9));

    Longtitude_Minutes.setXY(810, 13);
    Longtitude_Minutes.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Longtitude_Minutes.setLinespacing(0);
    touchgfx::Unicode::snprintf(Longtitude_MinutesBuffer1, LONGTITUDE_MINUTESBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6UU6).getText());
    Longtitude_Minutes.setWildcard1(Longtitude_MinutesBuffer1);
    touchgfx::Unicode::snprintf(Longtitude_MinutesBuffer2, LONGTITUDE_MINUTESBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SBPU).getText());
    Longtitude_Minutes.setWildcard2(Longtitude_MinutesBuffer2);
    Longtitude_Minutes.resizeToCurrentText();
    Longtitude_Minutes.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1L4Q));

    Lattitude_Minutes.setXY(670, 13);
    Lattitude_Minutes.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Lattitude_Minutes.setLinespacing(0);
    touchgfx::Unicode::snprintf(Lattitude_MinutesBuffer1, LATTITUDE_MINUTESBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OF23).getText());
    Lattitude_Minutes.setWildcard1(Lattitude_MinutesBuffer1);
    touchgfx::Unicode::snprintf(Lattitude_MinutesBuffer2, LATTITUDE_MINUTESBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TA5X).getText());
    Lattitude_Minutes.setWildcard2(Lattitude_MinutesBuffer2);
    Lattitude_Minutes.resizeToCurrentText();
    Lattitude_Minutes.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3TKG));

    Lattitude_Seconds.setXY(709, 13);
    Lattitude_Seconds.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Lattitude_Seconds.setLinespacing(0);
    touchgfx::Unicode::snprintf(Lattitude_SecondsBuffer1, LATTITUDE_SECONDSBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0BV7).getText());
    Lattitude_Seconds.setWildcard1(Lattitude_SecondsBuffer1);
    touchgfx::Unicode::snprintf(Lattitude_SecondsBuffer2, LATTITUDE_SECONDSBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CTHY).getText());
    Lattitude_Seconds.setWildcard2(Lattitude_SecondsBuffer2);
    Lattitude_Seconds.resizeToCurrentText();
    Lattitude_Seconds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NS5Z));

    EularAngle_Z.setXY(628, 13);
    EularAngle_Z.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    EularAngle_Z.setLinespacing(0);
    Unicode::snprintf(EularAngle_ZBuffer, EULARANGLE_Z_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M6RN).getText());
    EularAngle_Z.setWildcard(EularAngle_ZBuffer);
    EularAngle_Z.resizeToCurrentText();
    EularAngle_Z.setTypedText(touchgfx::TypedText(T___SINGLEUSE_06OM));

    EularAngle_Y.setXY(581, 13);
    EularAngle_Y.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    EularAngle_Y.setLinespacing(0);
    Unicode::snprintf(EularAngle_YBuffer, EULARANGLE_Y_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YXXK).getText());
    EularAngle_Y.setWildcard(EularAngle_YBuffer);
    EularAngle_Y.resizeToCurrentText();
    EularAngle_Y.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IVA2));

    EularAngle_X.setXY(534, 13);
    EularAngle_X.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    EularAngle_X.setLinespacing(0);
    Unicode::snprintf(EularAngle_XBuffer, EULARANGLE_X_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0R8J).getText());
    EularAngle_X.setWildcard(EularAngle_XBuffer);
    EularAngle_X.resizeToCurrentText();
    EularAngle_X.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9KX));

    Magnetic_Z.setXY(487, 13);
    Magnetic_Z.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Magnetic_Z.setLinespacing(0);
    Unicode::snprintf(Magnetic_ZBuffer, MAGNETIC_Z_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5H5Q).getText());
    Magnetic_Z.setWildcard(Magnetic_ZBuffer);
    Magnetic_Z.resizeToCurrentText();
    Magnetic_Z.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NEFZ));

    Magnetic_Y.setXY(440, 13);
    Magnetic_Y.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Magnetic_Y.setLinespacing(0);
    Unicode::snprintf(Magnetic_YBuffer, MAGNETIC_Y_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YAUS).getText());
    Magnetic_Y.setWildcard(Magnetic_YBuffer);
    Magnetic_Y.resizeToCurrentText();
    Magnetic_Y.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UE6W));

    Magnetic_X.setXY(393, 13);
    Magnetic_X.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Magnetic_X.setLinespacing(0);
    Unicode::snprintf(Magnetic_XBuffer, MAGNETIC_X_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2NO5).getText());
    Magnetic_X.setWildcard(Magnetic_XBuffer);
    Magnetic_X.resizeToCurrentText();
    Magnetic_X.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U75N));

    AngularRate_Z.setXY(346, 13);
    AngularRate_Z.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    AngularRate_Z.setLinespacing(0);
    Unicode::snprintf(AngularRate_ZBuffer, ANGULARRATE_Z_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_329I).getText());
    AngularRate_Z.setWildcard(AngularRate_ZBuffer);
    AngularRate_Z.resizeToCurrentText();
    AngularRate_Z.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C9Q8));

    AngularRate_Y.setXY(299, 13);
    AngularRate_Y.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    AngularRate_Y.setLinespacing(0);
    Unicode::snprintf(AngularRate_YBuffer, ANGULARRATE_Y_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_02RB).getText());
    AngularRate_Y.setWildcard(AngularRate_YBuffer);
    AngularRate_Y.resizeToCurrentText();
    AngularRate_Y.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7F9I));

    AngularRate_X.setXY(252, 13);
    AngularRate_X.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    AngularRate_X.setLinespacing(0);
    Unicode::snprintf(AngularRate_XBuffer, ANGULARRATE_X_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0AVF).getText());
    AngularRate_X.setWildcard(AngularRate_XBuffer);
    AngularRate_X.resizeToCurrentText();
    AngularRate_X.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0TIT));

    Acceleration_Z.setXY(205, 13);
    Acceleration_Z.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Acceleration_Z.setLinespacing(0);
    Unicode::snprintf(Acceleration_ZBuffer, ACCELERATION_Z_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WVRA).getText());
    Acceleration_Z.setWildcard(Acceleration_ZBuffer);
    Acceleration_Z.resizeToCurrentText();
    Acceleration_Z.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P1C3));

    Acceleration_Y.setXY(158, 13);
    Acceleration_Y.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Acceleration_Y.setLinespacing(0);
    Unicode::snprintf(Acceleration_YBuffer, ACCELERATION_Y_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_07W1).getText());
    Acceleration_Y.setWildcard(Acceleration_YBuffer);
    Acceleration_Y.resizeToCurrentText();
    Acceleration_Y.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZKX6));

    Acceleration_X.setXY(111, 13);
    Acceleration_X.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Acceleration_X.setLinespacing(0);
    Unicode::snprintf(Acceleration_XBuffer, ACCELERATION_X_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BM12).getText());
    Acceleration_X.setWildcard(Acceleration_XBuffer);
    Acceleration_X.resizeToCurrentText();
    Acceleration_X.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FXYT));

    add(BG_Image);
    add(DataRecord_Order);
    add(Longtitude_Seconds);
    add(Longtitude_Minutes);
    add(Lattitude_Minutes);
    add(Lattitude_Seconds);
    add(EularAngle_Z);
    add(EularAngle_Y);
    add(EularAngle_X);
    add(Magnetic_Z);
    add(Magnetic_Y);
    add(Magnetic_X);
    add(AngularRate_Z);
    add(AngularRate_Y);
    add(AngularRate_X);
    add(Acceleration_Z);
    add(Acceleration_Y);
    add(Acceleration_X);
}

void DataCollect_ElementBase::initialize()
{

}

